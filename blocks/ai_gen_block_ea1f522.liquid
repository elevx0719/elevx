{% doc %}
  @prompt
    generate a better quantity selector, make it only visible in mobile view, quantity label should also view in mobile only this section should be only view in mobile view

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-quantity-selector-wrapper-{{ ai_gen_id }} {
    display: none;
  }

  @media screen and (max-width: 749px) {
    .ai-quantity-selector-wrapper-{{ ai_gen_id }} {
      display: flex;
      align-items: center;
    }

    .ai-quantity-selector-{{ ai_gen_id }} {
      display: inline-flex;
      align-items: center;
      border: {{ block.settings.border_width }}px solid {{ block.settings.border_color }};
      border-radius: {{ block.settings.border_radius }}px;
      background-color: {{ block.settings.background_color }};
      overflow: hidden;
    }

    .ai-quantity-selector-button-{{ ai_gen_id }} {
      width: {{ block.settings.button_size }}px;
      height: {{ block.settings.button_size }}px;
      border: none;
      background-color: {{ block.settings.button_background }};
      color: {{ block.settings.button_text_color }};
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: {{ block.settings.button_icon_size }}px;
      font-weight: bold;
      transition: background-color 0.2s ease;
    }

    .ai-quantity-selector-button-{{ ai_gen_id }}:hover {
      background-color: {{ block.settings.button_hover_background }};
    }

    .ai-quantity-selector-button-{{ ai_gen_id }}:disabled {
      background-color: {{ block.settings.button_disabled_background }};
      color: {{ block.settings.button_disabled_text }};
      cursor: not-allowed;
      opacity: 0.5;
    }

    .ai-quantity-selector-input-{{ ai_gen_id }} {
      width: {{ block.settings.input_width }}px;
      height: {{ block.settings.button_size }}px;
      border: none;
      text-align: center;
      font-size: {{ block.settings.input_font_size }}px;
      font-weight: {{ block.settings.input_font_weight }};
      color: {{ block.settings.input_text_color }};
      background-color: {{ block.settings.input_background }};
      outline: none;
    }

    .ai-quantity-selector-input-{{ ai_gen_id }}::-webkit-outer-spin-button,
    .ai-quantity-selector-input-{{ ai_gen_id }}::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    .ai-quantity-selector-input-{{ ai_gen_id }}[type=number] {
      -moz-appearance: textfield;
    }

    .ai-quantity-selector-label-{{ ai_gen_id }} {
      margin-right: 12px;
      font-size: {{ block.settings.label_font_size }}px;
      color: {{ block.settings.label_color }};
      font-weight: {{ block.settings.label_font_weight }};
    }
  }
{% endstyle %}

<quantity-selector-{{ ai_gen_id }} 
  class="ai-quantity-selector-wrapper-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  {% if block.settings.show_label %}
    <label class="ai-quantity-selector-label-{{ ai_gen_id }}">
      {{ block.settings.label_text }}
    </label>
  {% endif %}

  <div class="ai-quantity-selector-{{ ai_gen_id }}">
    <button 
      type="button" 
      class="ai-quantity-selector-button-{{ ai_gen_id }} ai-quantity-decrease-{{ ai_gen_id }}"
      aria-label="Decrease quantity"
    >
      âˆ’
    </button>
    <input 
      type="number" 
      class="ai-quantity-selector-input-{{ ai_gen_id }}"
      value="{{ block.settings.initial_quantity }}"
      min="{{ block.settings.min_quantity }}"
      max="{{ block.settings.max_quantity }}"
      step="1"
      aria-label="Quantity"
    >
    
    <button 
      type="button" 
      class="ai-quantity-selector-button-{{ ai_gen_id }} ai-quantity-increase-{{ ai_gen_id }}"
      aria-label="Increase quantity"
    >
      +
    </button>
  </div>
</quantity-selector-{{ ai_gen_id }}>

<script>
  (function() {
    class QuantitySelector{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.input = this.querySelector('.ai-quantity-selector-input-{{ ai_gen_id }}');
        this.decreaseBtn = this.querySelector('.ai-quantity-decrease-{{ ai_gen_id }}');
        this.increaseBtn = this.querySelector('.ai-quantity-increase-{{ ai_gen_id }}');
        
        this.minQuantity = parseInt(this.input.getAttribute('min')) || 1;
        this.maxQuantity = parseInt(this.input.getAttribute('max')) || 999;
        
        this.setupEventListeners();
        this.updateButtonStates();
      }

      setupEventListeners() {
        this.decreaseBtn.addEventListener('click', () => {
          this.changeQuantity(-1);
        });

        this.increaseBtn.addEventListener('click', () => {
          this.changeQuantity(1);
        });

        this.input.addEventListener('input', () => {
          this.validateInput();
          this.updateButtonStates();
        });

        this.input.addEventListener('blur', () => {
          this.validateInput();
        });

        this.input.addEventListener('keydown', (e) => {
          if (e.key === 'ArrowUp') {
            e.preventDefault();
            this.changeQuantity(1);
          } else if (e.key === 'ArrowDown') {
            e.preventDefault();
            this.changeQuantity(-1);
          }
        });
      }

      changeQuantity(change) {
        const currentValue = parseInt(this.input.value) || this.minQuantity;
        const newValue = currentValue + change;
        
        if (newValue >= this.minQuantity && newValue <= this.maxQuantity) {
          this.input.value = newValue;
          this.input.dispatchEvent(new Event('change', { bubbles: true }));
        }
        
        this.updateButtonStates();
      }

      validateInput() {
        let value = parseInt(this.input.value);
        
        if (isNaN(value) || value < this.minQuantity) {
          value = this.minQuantity;
        } else if (value > this.maxQuantity) {
          value = this.maxQuantity;
        }
        
        this.input.value = value;
      }

      updateButtonStates() {
        const currentValue = parseInt(this.input.value) || this.minQuantity;
        
        this.decreaseBtn.disabled = currentValue <= this.minQuantity;
        this.increaseBtn.disabled = currentValue >= this.maxQuantity;
      }
    }

    customElements.define('quantity-selector-{{ ai_gen_id }}', QuantitySelector{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Mobile Quantity Selector",
  "settings": [
    {
      "type": "header",
      "content": "Label"
    },
    {
      "type": "checkbox",
      "id": "show_label",
      "label": "Show label",
      "default": true
    },
    {
      "type": "text",
      "id": "label_text",
      "label": "Label text",
      "default": "Quantity:"
    },
    {
      "type": "color",
      "id": "label_color",
      "label": "Label color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "label_font_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Label font size",
      "default": 16
    },
    {
      "type": "select",
      "id": "label_font_weight",
      "label": "Label font weight",
      "options": [
        { "value": "400", "label": "Normal" },
        { "value": "500", "label": "Medium" },
        { "value": "600", "label": "Semi-bold" },
        { "value": "700", "label": "Bold" }
      ],
      "default": "500"
    },
    {
      "type": "header",
      "content": "Quantity Settings"
    },
    {
      "type": "range",
      "id": "initial_quantity",
      "min": 1,
      "max": 10,
      "step": 1,
      "label": "Initial quantity",
      "default": 1
    },
    {
      "type": "range",
      "id": "min_quantity",
      "min": 1,
      "max": 10,
      "step": 1,
      "label": "Minimum quantity",
      "default": 1
    },
    {
      "type": "range",
      "id": "max_quantity",
      "min": 10,
      "max": 100,
      "step": 10,
      "label": "Maximum quantity",
      "default": 50
    },
    {
      "type": "header",
      "content": "Appearance"
    },
    {
      "type": "range",
      "id": "button_size",
      "min": 30,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Button size",
      "default": 40
    },
    {
      "type": "range",
      "id": "input_width",
      "min": 40,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "Input width",
      "default": 60
    },
    {
      "type": "range",
      "id": "border_radius",
      "min": 0,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "range",
      "id": "border_width",
      "min": 0,
      "max": 4,
      "step": 1,
      "unit": "px",
      "label": "Border width",
      "default": 1
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#e0e0e0"
    },
    {
      "type": "color",
      "id": "button_background",
      "label": "Button background",
      "default": "#f5f5f5"
    },
    {
      "type": "color",
      "id": "button_hover_background",
      "label": "Button hover background",
      "default": "#e0e0e0"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_disabled_background",
      "label": "Button disabled background",
      "default": "#f9f9f9"
    },
    {
      "type": "color",
      "id": "button_disabled_text",
      "label": "Button disabled text",
      "default": "#cccccc"
    },
    {
      "type": "color",
      "id": "input_background",
      "label": "Input background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "input_text_color",
      "label": "Input text color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "button_icon_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Button icon size",
      "default": 16
    },
    {
      "type": "range",
      "id": "input_font_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Input font size",
      "default": 16
    },
    {
      "type": "select",
      "id": "input_font_weight",
      "label": "Input font weight",
      "options": [
        { "value": "400", "label": "Normal" },
        { "value": "500", "label": "Medium" },
        { "value": "600", "label": "Semi-bold" },
        { "value": "700", "label": "Bold" }
      ],
      "default": "500"
    }
  ],
  "presets": [
    {
      "name": "Mobile Quantity Selector"
    }
  ]
}
{% endschema %}